"UID","Name","Documentation","isAbstract","Metaclass"
"_2021x_2_8710274_1674558192771_680283_23177","SAF_AbstractItem","Abstract. Must not to be used in a system model.","True","Element"
"_2021x_2_6d8019d_1674232165468_699772_23249","SAF_Argument","","False","Class"
"_2021x_2_6d8019d_1687623430525_974383_25431","SAF_ArgumentClaimSupport","","False","Dependency"
"_2021x_2_6d8019d_1674232165465_734664_23246","SAF_Claim","","False","Class"
"_2021x_2_6d8019d_1674232165481_295568_23274","SAF_ClaimAboutSubjectMaking","","False","Dependency"
"_2021x_2_6d8019d_1687619081355_443463_25050","SAF_ClaimClaimableItemSupport","","False","Dependency"
"_2021x_2_6d8019d_1674232165482_924684_23277","SAF_ClaimableItem","Abstract. Must not to be used in a system model.","True","Class"
"_2021x_2_6d8019d_1688225145328_197291_24223","SAF_Claimant","","False","Class"
"_2021x_2_6d8019d_1674232165478_345466_23268","SAF_ClaimantClaimMaking","","False","Dependency"
"_2021x_2_8710274_1676920197680_884628_29235","SAF_ContextAction","","False","CallBehaviorAction"
"_19_0_3_6d8019d_1599386889842_487820_471","SAF_ContextElementRepresentation","","False","Dependency"
"_19_0_4_6d8019d_1624825970650_773062_2087","SAF_ContextFunction","","False","Activity"
"_2021x_2_6d8019d_1674232165473_600709_23259","SAF_CounterClaim","","False","Class"
"_2021x_2_6d8019d_1674232165483_312955_23278","SAF_CounterClaimClaimableItemMaking","","False","Dependency"
"_19_0_2_26f0132_1562309311661_472964_142997","SAF_DocumentReference","","False","Comment"
"_19_0_3_26f0132_1614938958203_459716_5653","SAF_DomainKind","","False","DataType,Class"
"_19_0_4_6d8019d_1632170657124_127768_451","SAF_DomainKindComposition","","False","Association"
"_19_0_4_26f0132_1631285127577_990399_5297","SAF_DomainKindDerivation","","False","Abstraction"
"_2021x_2_6d8019d_1674232165469_125342_23251","SAF_Evidence","","False","Class"
"_2021x_2_6d8019d_1674232165474_404920_23262","SAF_EvidenceArgumentReinforcement","","False","Dependency"
"_19_0_4_6d8019d_1629825338987_420088_594","SAF_FunctionAction","","False","CallBehaviorAction"
"_19_0_2_26f0132_1558076033373_157322_46890","SAF_LogicalContext","","False","Class"
"_19_0_4_6d8019d_1617440763282_465948_2187","SAF_LogicalContextElementActing","","False","Association"
"_19_0_4_6d8019d_1630175259198_859971_358","SAF_LogicalContextRole","","False","Property"
"_19_0_1_26f0132_1547201742246_537565_42154","SAF_LogicalElement","","False","Class"
"_19_0_2_26f0132_1562313107961_803548_148677","SAF_LogicalEnvironment","","False","Class"
"_19_0_1_26f0132_1547202431219_827789_42473","SAF_LogicalExternalSystem","","False","Class"
"_2021x_2_6d8019d_1692006392401_529537_24496","SAF_LogicalInternalRole","","False","Property"
"_19_0_1_8710274_1547464060642_374530_42162","SAF_LogicalSOI","","False","Class"
"_19_0_2_26f0132_1558076117783_295122_47010","SAF_LogicalUser","","False","Class"
"_19_0_3_8710274_1581676828664_176399_54365","SAF_OperationalCapability","","False","Class"
"_19_0_3_6d8019d_1600160576148_12235_366","SAF_OperationalCapabilityComposition","","False","Association"
"_19_0_3_6d8019d_1600678873153_400736_372","SAF_OperationalCapabilityDependency","","False","Dependency"
"_19_0_3_6d8019d_1600163146864_328836_471","SAF_OperationalCapabilityGeneralization","","False","Generalization"
"_19_0_3_6d8019d_1614802389942_56809_428","SAF_OperationalCapabilitySupport","","False","Dependency"
"_19_0_3_26f0132_1581502754179_833407_156439","SAF_OperationalContext","","False","Class"
"_19_0_4_6d8019d_1618158382195_41606_448","SAF_OperationalDomainKind","","False","Class,DataType"
"_19_0_4_6d8019d_1632227659718_825878_1667","SAF_OperationalDomainKindComposition","","False","Association"
"_19_0_3_26f0132_1581501489077_870542_155174","SAF_OperationalPerformer","","False","Class"
"_19_0_3_6d8019d_1600283017764_387587_659","SAF_OperationalPerformerActing","","False","Association"
"_19_0_3_6d8019d_1599414738887_63027_366","SAF_OperationalPerformerComposition","","False","Association"
"_19_0_3_6d8019d_1611595448048_514745_861","SAF_OperationalPerformerExhibit","","False","Dependency"
"_19_0_3_8710274_1581679987896_193803_55986","SAF_OperationalProcess","","False","Activity"
"_19_0_4_6d8019d_1629824443819_231386_336","SAF_OperationalProcessAction","","False","CallBehaviorAction"
"_19_0_3_8710274_1581681312847_255155_56868","SAF_OperationalProcessEnabling","","False","Dependency"
"_19_0_3_8710274_1581684654332_634229_49093","SAF_OperationalProcessRefinement","","False","Abstraction"
"_19_0_4_6d8019d_1629637155053_836431_340","SAF_OperationalRole","","False","Property"
"_19_0_1_26f0132_1550433084140_670092_43421","SAF_OperationalSketch","","False","Comment"
"_19_0_3_6d8019d_1600597534207_157849_655","SAF_OperationalStakeholderRepresentation","","False","Association"
"_19_0_1_8710274_1552023067867_433281_43825","SAF_OperationalStory","","False","UseCase"
"_19_0_2_164f041e_1564558860534_409677_52063","SAF_PhysicalContext","","False","Class"
"_19_0_2_26f0132_1558090585793_420384_48529","SAF_PhysicalElement","","False","Class"
"_19_0_2_26f0132_1558076176279_434857_47106","SAF_PhysicalEnvironment","","False","Class"
"_2021x_2_8710274_1675099152786_518672_26637","SAF_PhysicalExchangeType","","False","DataType,Class"
"_19_0_2_26f0132_1560372077241_905943_48390","SAF_PhysicalExternalSystem","","False","Class"
"_19_0_2_26f0132_1558090490396_87116_48464","SAF_PhysicalHardwareElement","","False","Class"
"_19_0_1_26f0132_1547201836188_227821_42212","SAF_PhysicalItem","Abstract. Must not to be used in a system model.","True","Class,Element"
"_19_0_2_26f0132_1558090471537_935611_48414","SAF_PhysicalSoftwareElement","","False","Class"
"_19_0_1_8710274_1547464071851_635988_42197","SAF_PhysicalSystem","","False","Class"
"_19_0_1_26f0132_1547202486398_568937_42535","SAF_PhysicalUser","","False","Class"
"_2021x_2_6d8019d_1688225179612_961895_24265","SAF_Refuter","","False","Class"
"_2021x_2_6d8019d_1687637715067_620676_25736","SAF_RefuterCounterClaimMaking","","False","Dependency"
"_2021x_2_6d8019d_1674232165479_968036_23271","SAF_SCV02a_View","The Argumentation Assurance Viewpoint presents claims backed up by arguments that are supported by evidence, together with the possibility to counter such claims in a similar manner.A block definition diagram (BDD) featuring a claim-argument-evidence (C-A-E) pattern.","False","Diagram"
"_19_0_4_6d8019d_1617380348210_24096_555","SAF_SFV01a_View","The System Use Case Viewpoint provides an outside view on the system functionality from the perspective of the System Users and contributes to the definition of System Requirements and System Usage. The intended system use may be captured as free text use case description, as well as storytelling approach on a coarse level of detail. The main System Exchange Partners participating in the intended system use are identified. System use cases are related to a specific System Context.A use case diagram featuring model elements representing System Use Cases, System Context and System Context Elements.Note: System Use Case pre- and postconditions shall be represented either by callout or compartment notation.A tabular format listing the System Use Cases, the System Use Case pre- and postconditions, the System Context, and the System Context Elements.","False","Diagram"
"_19_0_4_6d8019d_1618591731111_585346_2477","SAF_SFV01b_View","The System Context Definition Viewpoint defines how the SOI is embedded in its Environment, i.e., where the boundary of the SOI is and who the External Entities are the SOI interacts with (e.g., Users, other External Systems, Environmental Conditions, etc.). The SOI provides and requests Context Functions. The SOI shall be able handle events and effects from the outside.Furthermore, the System Context Definition Viewpoint serves as architecture concept to demonstrate how the architecture defined in the The Operational Context Definition Viewpoint is realized.A block definition diagram (BDD) featuring the following elements* a Logical Element block representing SOI in the logical domain* a Logical Context block representing the addressed context in the logical domain* Logical Context Element blocks for each relevant context element* a composition relationship from Context block to each Context Element used in the context* a composition relationship from Context block to the SOIA tabular format listing the [tbd].","False","Diagram"
"_19_0_4_6d8019d_1618081524318_206808_1303","SAF_SFV01c_View","The System Context Exchange Viewpoint serves for the identification and definition of external interfaces of the SOI used for the interaction to Systemâs Context, such as Users, External Systems and other External Entities defined in the specific context of the SOI. The System Context Exchange Viewpoint* identifies System interfaces on a functional level,* states to which External Entities the System interfaces are connected to,* assigns Interface Documents to System Interfaces,* and defines the usage of interfaces, e.g., if only a subset of the interface is used.An internal block diagram (IBD) - associated to the System Context - featuring the SOI, the System Context Elements, and the connectors for each identified interface from SOI to the respective Context Elements. An interface is a connection resource for hooking on the SOI to other Context Elements. Item flows are defined for each exchange on the identified Interface. Connectors/ports may contain reference to the Interface Documents if applicable. Ports may be structured as appropriate to manage and structure the information.Note: more than one IBD focused on different areas of interest may be used in oder to keep the view comprehensive. Depending on the Stakeholder Concerns the Item Exchange information might be suppressed.A tabular format listing [tbd].","False","Diagram"
"_19_0_4_26f0132_1631267986737_158302_36","SAF_SFV02a_View","The System Domain Item Kind Viewpoint captures system wide concepts and collects type definitions for any exchanged item, e.g., information, material, or energy, of the Functional and Logical domain. Its purpose is to define these item types and their relationships. Furthermore, the System Domain Item Kind Viewpoint specifies the data types, entity types, related value types, and units that are used (âknownâ) by the SOI.Note: Domain Item Kinds are used as types of function input and output in the Functional Domain, and for types of interfaces in the Logical Domain. They specify what is to be exchanged but not how.A block definition diagram (BDD) featuring Domain Item Kinds and their relationships in terms of generalization, composition, or general association. Note: Domain Item Kinds are managed in the domain knowledge package of the SOI, the Domain Item Kinds are visible and usable to all sub elements of the SOI. Domain Item Kinds shall be value types or blocks. A tabular format listing the Domain Item Kinds and their relationships.","False","Diagram"
"_19_0_4_6d8019d_1618762989365_936788_2353","SAF_SFV02b_View","The System Capability Viewpoint defines a taxonomy of Capabilities including composition, specialization, and dependency relationships between System Capabilities.Note: Connecting capabilities to requirements creates a linkage between two different types of conceptual problem description that helps manage the complexity of the system. At a high level of abstraction, capabilities allow an system architect to plan phases of the system evolution without the need to bear details in mind. Those details will not be lost if they are captured as requirements and traced to a corresponding capability. There is one key difference between capabilities and requirements: Requirements come from different sources, sponsored by different stakeholders, and are usually captured at different levels of abstraction. In contrast, capabilities should always represent a coherent and consolidated view of the system.A block definition diagram (BDD) featuring System Capabilities, their composition, specialization, and dependency relationships.Note: The relationship to operational capabilities shall be shown if applicable.A tabular format listing System Capabilities, their composition, specialisation, and dependency relationships, as well as relations to operational capabilities.","False","Diagram"
"_19_0_4_26f0132_1629448019169_887442_9417","SAF_SFV02c_View","The System Functional Breakdown Structure Viewpoint defines the structured, modular breakdown of the SOI beginning with System Processes, over identified System Functions further refined down to System Partial Functions. The reuse of System Functions, and System Partial Functions over Function Trees of the SOI is facilitated. Unlike a Work Breakdown Structure (WBS), the Functional Breakdown Structure (FBS) is a function-oriented tree, not a product-oriented one.One or more more block definition diagrams (BDD) featuring activities representing System Processes, System Functions, System Partial Functions, and their aggregation composing the functional breakdown structure.Tool specific analysis diagram featuring the relationships between System Processes, System Functions, and System Partial Functions.","False","Diagram"
"_19_0_4_6d8019d_1617380277228_633159_552","SAF_SFV03a_View","The System Process Viewpoint provides the functional representation of the system using a black-box approach* the representation of the SOI and all Context Elements* the System Functions the SOI shall be able to perform* the Context Functions the Context Elements are expected to perform* the exchange between SOI System Functions and Context Functions of Context Elements* the functional flows crossing the boundary between SOI and Context ElementsAn activity diagram featuring the ordered execution of System Process Actions. The activity diagram swim lanes are typed with Context Element usage and SOI usage from the same System Context. Note: In order to improve the clarity of presentation it may be appropriate to use several activity diagrams for one System Process.A tabular format listing all identified System Functions, the System Processes in which they appear, and the Comtext Exchange with the Context Functions.","False","Diagram"
"_2021x_2_6d8019d_1677616004198_497557_24505","SAF_SFV03b_View","The System Functional Refinement Viewpoint analyses decomposition of System Functions into System Partial Functions in order achieve understanding and agreement about the System functions sufficient to derive system  requirements.Activity Diagram featuring System Partial Functions, functional exchange between partial functions. There are explicitely no Swimlanes and no allocations to structure.","False","Diagram"
"_19_0_4_6d8019d_1627582668863_723808_2445","SAF_SFV03c_View","The System State Viewpoint defines the conditions of the SOI or parts of thereof that constrain the execution of System Functions. System States are used as pre- or post-condition of System Use Cases, and as constraints within the definition of System Functions to specifying valid transitions. Valid transitions between System States and the conditions for transitioning are specified in system wide concepts captured in System Requirements.A block definition diagram (BDD) featuring states, and state transitions. Note: References to model elements that are dependent of states, or transitions shall be shown as callout, or compartment notation.A tabular format listing states, state transitions, and the conditons to be fullfilled before the transition will occur. References to model elements that are dependent of states (Domain Item Kinds, System Functions, System Use Cases, etc.), or transitions shall be shown in the table.","False","Diagram"
"_19_0_4_26f0132_1626791693357_994866_3136","SAF_SFV04a_View","The System Context Interaction Viewpoint describes the System external behavior based on the exchange between Logical SOI and Logical Context Elements Usage within a specific System Context. It depicts the sequence of interactions between the Logical SOI, the Context Elements and the Exchanged Domain Item Kinds needed to accomplish a given System Process. Note: The System Context Interaction Viewpoint may refine an System Use Case.A sequence diagram featuring the flow of control between SOI and Context Elements Roles of a System Context to achieve one outcome of a System Use Case. Note: This diagram depicts the sending and receiving of messages between the interacting entities called lifelines, where time is represented along the vertical axis. The lifelines representatives are part properties typed by a System Context Elements.","False","Diagram"
"_2021x_2_8710274_1679480698224_528018_25860","SAF_SFV05a_View","The System Functional Interface Definition Viewpoint provides definitions used on functional Interfaces used in the system context. It allows to structure interface definitions to improve clarity and manageability.A BDD featuring Interface Blocks with ports and flow properties. If ports are used they shall be proxy ports, and be typed by interface blocks.A Table featuringt interface blocks and their ports and flow properties.","False","Diagram"
"_19_0_1_26f0132_1548407715628_25139_43804","SAF_SFV06a_View","The System Requirement Viewpoint specifies functions, non-functional properties, or constraints of the System. System Requirements are captured, the interrelationships between Functional and Non-Functional Requirements on the same level of abstraction and the traceability to Stakeholder Requirements are depicted.A System Requirement Table (RVTM), a tabular format, featuring* unique requirement ID, text, and attributes,* traceability reference to Stakeholder Requirements,* traceability reference to depended Requirements on the same level of abstraction.","False","Diagram"
"_2021x_2_6d8019d_1691055569911_434596_24894","SAF_SFV08a_View","The System Capability Mapping Viewpoint describes the relationships of System Capabilities. The reasoning for System Capabilities as support for System Use Cases and the contribution of System Processes to Capabilities are described. Furthermore, the mapping of System Capabilities to Operational Capabilities are identified.A tabular format listing the relationships of System Capabilities to Operational Capabilities, System Use Cases, System Process Activities, and System Requirements.","False","Diagram"
"_19_0_4_6d8019d_1624904106285_850809_1491","SAF_SFV08b_View","The System Requirement Traceability Viewpoint specifies for every System Requirement the traceability to the functional domain level* System Use Case* System Capability* System Context Definition* System Context Exchange* System Context Interaction* System Process* System StateA System Requirement Dependency Matrix featuring relationships for every System Requirement to the functional domain level* System Use Case* System Capability* System Context Definition* System Context Exchange* System Context Interaction* System Process* System State","False","Diagram"
"_19_0_4_26f0132_1625209562736_284155_381","SAF_SLV02a_View","The Logical Structure Viewpoint covers the basic technical notion of the System and is widely reusable among similar systems like product families, or product generations. The Logical Structure Viewpoint specifies how the system is decomposed into a hierarchical structure of logical components responsible for different System Functions (divide & conquer principle).A block definition diagram (BDD) featuring the logical System block and logical blocks for each kind of Logical Element the system is composed of. The elements are connected to the System block by means of aggregation relationships. Note: Multiple relationships to a kind of element are allowed meaning, that this kind of element is used in several roles.","False","Diagram"
"_19_0_3_26f0132_1582319340394_382321_60610","SAF_SLV04a_View","The Logical Internal Interaction Viewpoint describes System internal behavior based on the exchange between the Logical SOI Elements Usage. It depicts the sequence of interactions between the Logical SOI Elements and the Exchanged Domain Item Kinds needed to accomplish a System Partial Function.A sequence diagram featuring the flow of control between Internal Logical Elements of the SOI.Note: This diagram depicts the sending and receiving of messages between the interacting entities called lifelines where time is represented along the vertical axis. The lifeline representatives are part properties typed by Logical System Elements.","False","Diagram"
"_19_0_4_26f0132_1625209687705_869914_419","SAF_SLV04b_View","The Logical Internal Exchange Viewpoint serves for the identification and definition of interfaces of elements of the Logical System. Also, the delegation of system element interfaces to the Logical System boundary interfaces is covered.The Logical Internal Exchange Viewpoint* identifies system element interfaces on a Logical Level* states to which other system elements the interfaces are connected to* assigns interface specifications to interfaces* defines the usage of interfaces, e.g., if only a subset of the interfaces is used * defines the delegation of system element interfaces to the system boundary interfacesOne or more IBD featuring the Logical Elements of the SOI, and the SOI boundary, containing connectors for each identified SOI interface delegation to SOI elements, as well as connectors between related interfaces of SOI parts. An interface is a connection resource for hooking on the Logical SOI Elements to other Logical SOI Elements. Item flows are defined for each exchange on the identified interface.  Recommendation: Use more than one IBD focused on different areas of interest to keep the view comprehensive. Depending on the Stakeholder Concerns the logical item exchange information might be suppressed.","False","Diagram"
"_2021x_2_6d8019d_1677360534022_847905_25995","SAF_SLV08a_View","The Logical Functional Mapping Viewpoint specifies the assignment of the System Functions and the System Partial Functions to the Logical SOI and the Logical SOI Elements.A  Logical Functional Mapping Matrix featuring* the call behavior action representing usage of System Functions and or System Partial Functions* the part properties representing usage of Logical SOI Elements* the allocation relationship between abovementioned elements","False","Diagram"
"_19_0_3_26f0132_1601645195786_604902_11134","SAF_SOV01a_View","The Operational Story Viewpoint* captures Operational Stories and their relation to Operational Performers, thus enables storytelling* illustrates the operational background from the Stakeholderâs perspective* serves as starting point to identify Stakeholders and/or context elements* fosters the communication among different StakeholdersA use case diagram featuring model elements representing Operational Stories, and Operational Performers involved in the mission. Note: Illustrations (drawings, sketches, etc.), and/or descriptions in free text may provide a comprehensive understanding of the operational background.","False","Diagram"
"_19_0_1_26f0132_1548401929328_77241_42963","SAF_SOV01b_View","The Operational Context Definition Viewpoint provides the Operational Contexts, and the involved Operational Performers necessary to support a specific set of Operational Capabilities.A block definition diagram (BDD) featuring the identified Operational Performers playing a role in the Operational Context being addressed.","False","Diagram"
"_19_0_3_26f0132_1601646100437_337953_13001","SAF_SOV01c_View","The Operational Context Exchange Viewpoint provides the Operational Exchange between Operational Performers of information, systems, personnel, energy, etc.An internal block diagram (IBD) - associated to the Operational Context - featuring the interconnected Operational Performers in their respective Operational Role, and the Operational Item Exchange per Operational Connection.A tabular format listing [tbd].","False","Diagram"
"_19_0_4_26f0132_1630062793069_290685_155","SAF_SOV02a_View","The Operational Domain Item Kind Viewpoint captures enterprise wide concepts and collects type definitions for any exchanged item of the Operational Domain. Its purpose is to define these item types and their relationships.A block definition diagram (BDD) featuring Operational Domain Item Kinds and their relationships in terms of generalization, composition, or general association.Note: Operational Domain Item Kinds are managed in the domain knowledge package of the Enterprise. Operational Domain Item Kinds shall be value types or blocks. ","False","Diagram"
"_19_0_3_26f0132_1601455842479_177976_826","SAF_SOV02b_View","The Operational Performer Viewpoint represents the taxonomy of the identified Operational Performers, if existing and relevant for the understanding of the operation of the intended solution. A block definition diagram (BDD) featuring Operational Performers. and their relations in terms of decomposition or generalization at a level of detail required for problem understanding and analysis. Note: Identified Stakeholders are related to Operational Performers if appropriate.","False","Diagram"
"_19_0_3_26f0132_1601643834849_398612_8169","SAF_SOV02c_View","The Operational Capability Viewpoint defines a taxonomy of Capabilities from a Stakeholderâs perspective including composition, specialization, and dependency relationships between Operational Capabilities.A block definition diagram (BDD) featuring Operational Capabilities, their composition, specialization, and dependency relationships.","False","Diagram"
"_19_0_4_6d8019d_1671380025053_143662_13","SAF_SOV02d_View","The Stakeholder Identification Viewpoint of the Operation Domain strives to identify the Operational Stakeholders, i.e., those Stakeholders, whoâs Needs shall be considered during the operation of the intended solution and the execution of the Operational Processes to support the identified Operational Capabilities. A Stakeholder Identification is a process of analyzing individuals, teams, or organizations throughout the project life cycle, grouping them according to their levels of participation, interest, and influence in the project, and determining how best to involve and communicate with each of these Stakeholder groups throughout.Note: During the realization of the Intended Solution additional Stakeholders shall be identified having additional Needs and Requirements e.g. regarding production of system elements or certain technologies. A block definition diagram (BDD) depicting the identified Operational Stakeholders and their relations  towards the Intended Solution.","False","Diagram"
"_19_0_3_26f0132_1600503062173_139730_1994","SAF_SOV03a_View","The Operational Process Viewpoint describes the Operational Processes related to a specific Operational Story, the sequence of execution, and their Operational Exchanges, including information, materials, natural resources, etc. The assignment of Operational Processes to Operational Performers is captured.An activity diagram featuring the ordered execution of Operational Process Actions. Operational Processes may be linked in terms of control flow and/or data flow visualizing the Operational Exchanges needed. Note: Operational Process Actions are assigned to Operational Roles and therefore in a more general manner to Operational Performers.","False","Diagram"
"_19_0_2_26f0132_1567697216482_129982_55869","SAF_SOV04a_View","The Operational Interaction Viewpoint describes single threads of interaction between Operational Performers in an Operational Context on an operational domain level. Note: The Operational Interaction Viewpoint may refine an Operational Story.A sequence diagram featuring the flow of control between Operational Performers of an Operational Context to achieve one outcome of an Operational Story. Note: This diagram depicts the sending and receiving of messages between the interacting entities called lifelines where time is represented along the vertical axis. The lifelines representatives are part properties typed by Operational Performers.","False","Diagram"
"_19_0_1_26f0132_1548401956524_759247_43000","SAF_SOV06a_View","The Stakeholder Requirement Viewpoint specifies all properties that the intended solution shall possess or expose from the perspective of the Stakeholders. The Stakeholder Requirement Viewpoint determines capabilities, functions, non-functional properties, and constraints.A Stakeholder Requirement Table (RVTM), a tabular format, featuring* unique requirement ID, text, and attributes,* traceability reference to justifying model artefacts.Note: Stakeholder Requirements are to be structured in a way that the Stakeholder behind the Requirement is identifiable. When appropriate, the relationships between identified Stakeholder Requirements are and the justifying model artefacts, Operational Story, Operational Capability, Operational Performer, Operational Process, and Operational Exchange are presented.* "One Requirement Package for each Stakeholder" is a best-practice modeling rule. A package contains the Requirements specific for one Stakeholder.* Even if different Stakeholders may have intersecting interests and / or concerns resulting in a similar set of Requirements, each Stakeholder shall have its own set managed in a dedicated Requirement Package. Requirements must not be shared due to their different life cycles. Resolving duplications and conflicts is subject of the requirement analysis resulting in an agreed and consolidated set of System Requirements.","False","Diagram"
"_19_0_3_6d8019d_1608907358473_975875_316","SAF_SOV08a_View","The Operational Capability Mapping Viewpoint describes the relationships of Operational Capabilities. The reasoning for Operational Capabilities as support for Operational Stories and the contribution of Operational Processes to Capabilities are described. Operational Capabilities encoded in Stakeholder Requirements are identified.A tabular format listing the relationships of Operational Capabilities to Stakeholder Requirements, Operational Stories, and Operational Process Activities.","False","Diagram"
"_19_0_3_26f0132_1601459116625_669721_6527","SAF_SOV08b_View","The Operational Process Mapping Viewpoint describes the relationships of Operational Processes. The reasoning for Operational Processes from Operational Stories and their contribution to Capabilities is described. The assignment of Operational Processes to Operational Performers is captured.A tabular format listing the relationships of Operational Process Activities to Operational Capabilities, Operational Stories, and Operational Performers.","False","Diagram"
"_2021x_2_6d8019d_1674914191877_627483_25391","SAF_SPV01a_View","The Physical Context Definition Viewpoint identifies the different context the system is used in, along with the associated external entities sharing a physical interface with the system. For each context the applicable environmental conditions may be defined. The physical context helps in discovering the Interface Requirements needed to integrate a system into its environment in a specific context.Note: For each candidate system architecture, the physical context Viewpoint is elaborated forming the baseline for the later assessment of the different system architecture solutions.The following artifacts support the modeling activities: The physical context definition diagram (BDD) defines the elements available in a specific context. At least one physical context definition diagram is used per identified context, featuring* one block representing the Physical System i.e. the system of interest* one block representing the specific Physical System Context* several blocks representing Physical Context Elements such as Physical User, Physical External System, and Physical Environment present in the systems context* composition relationships attaching the Physical Context Elements and the Physical System to the Physical System Context block","False","Diagram"
"_2021x_2_6d8019d_1675161151233_753157_23835","SAF_SPV04b_View","The Physical Internal Exchange Viewpoint serves for the identification and definition of interfaces of elements of the SOI. Also, the delegation of SOI element interfaces to SOI boundary interfaces is covered.The Phyiscal Internal Exchange Viewpoint* identifies SOI element interfaces on a Physical Level* states to which other SOI elements the interfaces are connected to* assigns interface specifications to interfaces* defines the usage of interfaces, e.g., if only a subset of the interfaces is used * defines the delegation of SOI element interfaces to SOI boundary interfacesOne or more IBD featuring the Physical Elements of the SOI, and the SOI boundary, containing connectors for each identified SOI interface delegation to SOI elements, as well as connectors between related interfaces of SOI parts. An interface is a connection resource for hooking on the Physical SOI Elements to other Physical SOI Elements. Item flows are defined for each exchange on the identified interface.  Recommendation: Use more than one IBD focused on different areas of interest to keep the view comprehensive. Depending on the Stakeholder Concerns the physical item exchange information might be suppressed.","False","Diagram"
"_2021x_2_6d8019d_1677947386605_221993_24617","SAF_SPV08a_View","The Physical Logical Mapping Viewpoint specifies the assignment of the Logical SOI Elements to the Physical SOI Elements.A  Physical To Logical Assigment Matrix featuring* Logical Elements* Physical Elements* allocation relationships from logical elements to physical elements","False","Diagram"
"_2021x_2_6d8019d_1677946801652_589028_24613","SAF_SPV08b_View","The Physical Functional Mapping Viewpoint analyses the assignment of the System Functions and the System Partial Functions to the Physical SOI Elements.A  Physical Functional Mapping Matrix featuring* the call behavior action representing usage of System Functions*  Physical SOI Elements or Physical SOI* a derived relationship","False","Diagram"
"_19_0_2_26f0132_1565094689606_808099_51895","SAF_Stakeholder","","False","Class"
"_19_0_2_26f0132_1576256988971_313392_56275","SAF_StakeholderRelation","","False","Association"
"_19_0_2_164f041e_1564562840570_263949_52838","SAF_StakeholderRequirement","","False","Class"
"_19_0_3_6d8019d_1600679857332_333392_618","SAF_StakeholderRequirementImposition","","False","Dependency"
"_19_0_3_6d8019d_1609148130261_947486_570","SAF_StakeholderRequirementRefinement","","False","Abstraction"
"_2021x_2_6d8019d_1674232165471_339910_23255","SAF_Subject","","False","Class"
"_19_0_3_6d8019d_1614802234951_841733_423","SAF_SystemCapability","","False","Class"
"_19_0_4_6d8019d_1618761245041_564044_2064","SAF_SystemCapabilityComposition","","False","Association"
"_19_0_4_6d8019d_1618761245046_533877_2065","SAF_SystemCapabilityDependency","","False","Dependency"
"_19_0_4_6d8019d_1633793471065_964488_390","SAF_SystemCapabilityEnabling","","False","Dependency"
"_19_0_4_6d8019d_1618761245048_815843_2066","SAF_SystemCapabilityGeneralization","","False","Generalization"
"_2021x_2_6d8019d_1691179425619_679578_24346","SAF_SystemCapabilitySatisfaction","","False","Abstraction"
"_19_0_4_6d8019d_1630159558286_241427_911","SAF_SystemCapabilitySupport","","False","Dependency"
"_19_0_1_26f0132_1548408079060_514464_44018","SAF_SystemFunction","","False","Activity"
"_2021x_2_6d8019d_1691057742693_17377_25753","SAF_SystemFunctionSupport","","False","Dependency"
"_19_0_4_6d8019d_1630685173057_20068_948","SAF_SystemFunctionalRequirement","","False","Class"
"_19_0_2_26f0132_1566859056603_764774_53994","SAF_SystemFunctionalRequirementConstraint","","False","Dependency"
"_19_0_4_6d8019d_1630757173609_819998_2321","SAF_SystemFunctionalRequirementRefinement","","False","Abstraction"
"_19_0_4_6d8019d_1630685173062_232273_950","SAF_SystemNonFunctionalRequirement","","False","Class"
"_19_0_2_26f0132_1567750318852_177696_53167","SAF_SystemOfInterestConcern","","False","Comment"
"_2021x_2_8710274_1676729827724_699643_30171","SAF_SystemPartialFunction","","False","Activity"
"_19_0_4_26f0132_1624963294145_897849_4228","SAF_SystemProcess","","False","Activity"
"_2021x_2_6d8019d_1691052942497_211885_24413","SAF_SystemProcessEnabling","","False","Dependency"
"_2021x_2_6d8019d_1691063354251_379935_24633","SAF_SystemProcessRefinement","","False","Abstraction"
"_19_0_2_6d8019d_1566473880087_254926_52599","SAF_SystemRequirement","","False","Class"
"_19_0_4_6d8019d_1630686502149_531538_1032","SAF_SystemRequirementDerivation","","False","Abstraction"
"_19_0_4_6d8019d_1630755344891_22928_2192","SAF_SystemRequirementRefinement","","False","Abstraction"
"_19_0_1_8710274_1552023080917_369823_43852","SAF_SystemUseCase","","False","UseCase"
"_19_0_4_6d8019d_1630778868755_864755_338","SAF_SystemUseCaseEnabling","","False","Dependency"
"_19_0_3_26f0132_1600503186077_662521_2047","SysML ActivityDiagram","Proxy Stereotype representing the Activity Diagram Kind","False","Diagram"
"_19_0_2_26f0132_1567697620322_299075_57415","SysML BlockDiagram","Proxy Stereotype representing the Block Diagram Kind","False","Diagram"
"_19_0_3_26f0132_1601646128417_547818_13036","SysML InternalBlockDiagram","Proxy Stereotype representing the Internal Block Diagram Kind","False","Diagram"
"_19_0_3_6d8019d_1609099545041_886180_408","SysML RequirementDiagram","Proxy Stereotype representing the Requirement Diagram Kind","False","Diagram"
"_19_0_2_26f0132_1567697372946_56228_57325","SysML SequenceDiagram","Proxy Stereotype representing the Sequence Diagram Kind","False","Diagram"
"_19_0_4_6d8019d_1627581789485_703492_1206","SysML StateMaschineDiagram","Proxy Stereotype representing the Statemachine Diagram Kind","False","Diagram"
"_19_0_3_26f0132_1601645172752_571834_11090","SysML UseCaseDiagram","Proxy Stereotype representing the Use Case Diagram Kind","False","Diagram"
